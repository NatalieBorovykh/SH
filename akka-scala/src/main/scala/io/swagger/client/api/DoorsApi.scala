/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Errors
import io.swagger.client.model.InlineResponse20020
import io.swagger.client.model.InlineResponse20032
import io.swagger.client.model.InlineResponse20033
import io.swagger.client.model.InlineResponse20040
import io.swagger.client.model.OnityPayload
import io.swagger.client.model.Status
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object DoorsApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 200 : InlineResponse20040 (mobile key)
   *   code 400 : Errors (Bad Request)
   *   code 401 : Errors (Unauthorized)
   * 
   * Available security schemes:
   *   bodyHash (apiKey)
   *   consumerKey (apiKey)
   *   hmac (apiKey)
   *   hmacTimestamp (apiKey)
   *   hmacVersion (apiKey)
   *   sessionUuid (apiKey)
   * 
   * @param checkinId 
   * @param id 
   * @param status 
   */
  def guestCheckinsCheckinIdMobileKeysIdPatch(checkinId: Int, id: Int, status: Status)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[InlineResponse20040] =
    ApiRequest[InlineResponse20040](ApiMethods.PATCH, "https://virtserver.swaggerhub.com/SmartBear-CC/Natalie_TestAutoMock/1.0.0", "/guest/checkins/{checkin_id}/mobile_keys/{id}", "application/json")
      .withApiKey(apiKey, "X-Body-Hash", HEADER)
      .withApiKey(apiKey, "X-Consumer-Key", HEADER)
      .withApiKey(apiKey, "X-HMAC", HEADER)
      .withApiKey(apiKey, "X-HMAC-Timestamp", HEADER)
      .withApiKey(apiKey, "X-HMAC-Version", HEADER)
      .withApiKey(apiKey, "X-Session-Uuid", HEADER)
      .withBody(status)
      .withPathParam("checkin_id", checkinId)
      .withPathParam("id", id)
      .withSuccessResponse[InlineResponse20040](200)
      .withErrorResponse[Errors](400)
      .withErrorResponse[Errors](401)
        /**
   * Send Assaabloy request for invitation code.
   * 
   * Expected answers:
   *   code 200 : InlineResponse20020 (Assa Abloy invitation)
   *   code 400 : Errors (Bad Request)
   *   code 401 : Errors (Unauthorized)
   * 
   * Available security schemes:
   *   bodyHash (apiKey)
   *   consumerKey (apiKey)
   *   hmac (apiKey)
   *   hmacTimestamp (apiKey)
   *   hmacVersion (apiKey)
   *   sessionUuid (apiKey)
   */
  def guestDoorsAssaAbloyRequestInvitationPost()(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[InlineResponse20020] =
    ApiRequest[InlineResponse20020](ApiMethods.POST, "https://virtserver.swaggerhub.com/SmartBear-CC/Natalie_TestAutoMock/1.0.0", "/guest/doors/assa_abloy/request_invitation", "application/json")
      .withApiKey(apiKey, "X-Body-Hash", HEADER)
      .withApiKey(apiKey, "X-Consumer-Key", HEADER)
      .withApiKey(apiKey, "X-HMAC", HEADER)
      .withApiKey(apiKey, "X-HMAC-Timestamp", HEADER)
      .withApiKey(apiKey, "X-HMAC-Version", HEADER)
      .withApiKey(apiKey, "X-Session-Uuid", HEADER)
      .withSuccessResponse[InlineResponse20020](200)
      .withErrorResponse[Errors](400)
      .withErrorResponse[Errors](401)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : InlineResponse20033 (hafele token)
   *   code 400 : Errors (Bad Request)
   *   code 401 : Errors (Unauthorized)
   * 
   * Available security schemes:
   *   bodyHash (apiKey)
   *   consumerKey (apiKey)
   *   hmac (apiKey)
   *   hmacTimestamp (apiKey)
   *   hmacVersion (apiKey)
   *   sessionUuid (apiKey)
   */
  def guestDoorsHafeleTokenGet()(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[InlineResponse20033] =
    ApiRequest[InlineResponse20033](ApiMethods.GET, "https://virtserver.swaggerhub.com/SmartBear-CC/Natalie_TestAutoMock/1.0.0", "/guest/doors/hafele/token", "application/json")
      .withApiKey(apiKey, "X-Body-Hash", HEADER)
      .withApiKey(apiKey, "X-Consumer-Key", HEADER)
      .withApiKey(apiKey, "X-HMAC", HEADER)
      .withApiKey(apiKey, "X-HMAC-Timestamp", HEADER)
      .withApiKey(apiKey, "X-HMAC-Version", HEADER)
      .withApiKey(apiKey, "X-Session-Uuid", HEADER)
      .withSuccessResponse[InlineResponse20033](200)
      .withErrorResponse[Errors](400)
      .withErrorResponse[Errors](401)
        /**
   * The parameters name, description, pin, allow_pin_release_shackle and payload, are optional parameters of Onity API for generating key. Key is created and then the code is requested and returned.  Onity authentication code is stored on database. If a request is triggered twice or more for the same venue, the code generated on the first try will be returned. To force a new code to be generated you should provide the force parameter as true. 
   * 
   * Expected answers:
   *   code 200 : InlineResponse20032 (onity auth code)
   *   code 400 : Errors (Bad Request)
   *   code 401 : Errors (Unauthorized)
   * 
   * Available security schemes:
   *   bodyHash (apiKey)
   *   consumerKey (apiKey)
   *   hmac (apiKey)
   *   hmacTimestamp (apiKey)
   *   hmacVersion (apiKey)
   *   sessionUuid (apiKey)
   * 
   * @param onityPayload 
   */
  def guestDoorsOnityAuthCodeGet(onityPayload: Option[OnityPayload] = None)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[InlineResponse20032] =
    ApiRequest[InlineResponse20032](ApiMethods.GET, "https://virtserver.swaggerhub.com/SmartBear-CC/Natalie_TestAutoMock/1.0.0", "/guest/doors/onity/auth_code", "application/json")
      .withApiKey(apiKey, "X-Body-Hash", HEADER)
      .withApiKey(apiKey, "X-Consumer-Key", HEADER)
      .withApiKey(apiKey, "X-HMAC", HEADER)
      .withApiKey(apiKey, "X-HMAC-Timestamp", HEADER)
      .withApiKey(apiKey, "X-HMAC-Version", HEADER)
      .withApiKey(apiKey, "X-Session-Uuid", HEADER)
      .withBody(onityPayload)
      .withSuccessResponse[InlineResponse20032](200)
      .withErrorResponse[Errors](400)
      .withErrorResponse[Errors](401)
      

}

