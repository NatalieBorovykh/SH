/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.ChargeableItems
import io.swagger.client.model.CheckoutRequest
import io.swagger.client.model.CheckoutRequest1
import io.swagger.client.model.Errors
import io.swagger.client.model.FolioResponse
import io.swagger.client.model.InlineResponse20029
import io.swagger.client.model.InlineResponse20035
import io.swagger.client.model.MobileCheckoutResponse
import io.swagger.client.model.TransactionRequest
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object CheckoutApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 200 : InlineResponse20029 (Checkout request Data)
   *   code 400 : Errors (Bad Request)
   *   code 401 : Errors (Unauthorized)
   * 
   * Available security schemes:
   *   bodyHash (apiKey)
   *   consumerKey (apiKey)
   *   hmac (apiKey)
   *   hmacTimestamp (apiKey)
   *   hmacVersion (apiKey)
   *   sessionUuid (apiKey)
   * 
   * @param checkoutRequest 
   */
  def guestCheckoutRequestsAdHocPost(checkoutRequest: CheckoutRequest1)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[InlineResponse20029] =
    ApiRequest[InlineResponse20029](ApiMethods.POST, "https://virtserver.swaggerhub.com/SmartBear-CC/Natalie_TestAutoMock/1.0.0", "/guest/checkout_requests/ad_hoc", "application/json")
      .withApiKey(apiKey, "X-Body-Hash", HEADER)
      .withApiKey(apiKey, "X-Consumer-Key", HEADER)
      .withApiKey(apiKey, "X-HMAC", HEADER)
      .withApiKey(apiKey, "X-HMAC-Timestamp", HEADER)
      .withApiKey(apiKey, "X-HMAC-Version", HEADER)
      .withApiKey(apiKey, "X-Session-Uuid", HEADER)
      .withBody(checkoutRequest)
      .withSuccessResponse[InlineResponse20029](200)
      .withErrorResponse[Errors](400)
      .withErrorResponse[Errors](401)
        /**
   * Request checkout
   * 
   * Expected answers:
   *   code 200 : InlineResponse20029 (Checkout request Data)
   *   code 400 : Errors (Bad Request)
   *   code 401 : Errors (Unauthorized)
   * 
   * Available security schemes:
   *   bodyHash (apiKey)
   *   consumerKey (apiKey)
   *   hmac (apiKey)
   *   hmacTimestamp (apiKey)
   *   hmacVersion (apiKey)
   *   sessionUuid (apiKey)
   * 
   * @param checkoutRequest Checkout request
   */
  def guestCheckoutRequestsPost(checkoutRequest: CheckoutRequest)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[InlineResponse20029] =
    ApiRequest[InlineResponse20029](ApiMethods.POST, "https://virtserver.swaggerhub.com/SmartBear-CC/Natalie_TestAutoMock/1.0.0", "/guest/checkout_requests", "application/json")
      .withApiKey(apiKey, "X-Body-Hash", HEADER)
      .withApiKey(apiKey, "X-Consumer-Key", HEADER)
      .withApiKey(apiKey, "X-HMAC", HEADER)
      .withApiKey(apiKey, "X-HMAC-Timestamp", HEADER)
      .withApiKey(apiKey, "X-HMAC-Version", HEADER)
      .withApiKey(apiKey, "X-Session-Uuid", HEADER)
      .withBody(checkoutRequest)
      .withSuccessResponse[InlineResponse20029](200)
      .withErrorResponse[Errors](400)
      .withErrorResponse[Errors](401)
        /**
   * Charge on reservation
   * 
   * Expected answers:
   *   code 200 : FolioResponse (Current folio)
   *   code 400 : Errors (Bad Request)
   *   code 401 : Errors (Unauthorized)
   * 
   * Available security schemes:
   *   bodyHash (apiKey)
   *   consumerKey (apiKey)
   *   hmac (apiKey)
   *   hmacTimestamp (apiKey)
   *   hmacVersion (apiKey)
   *   sessionUuid (apiKey)
   * 
   * @param id ID of reservation to charge on
   * @param chargeableItems chargeable items
   */
  def guestReservationsIdChargePost(id: Long, chargeableItems: ChargeableItems)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[FolioResponse] =
    ApiRequest[FolioResponse](ApiMethods.POST, "https://virtserver.swaggerhub.com/SmartBear-CC/Natalie_TestAutoMock/1.0.0", "/guest/reservations/{id}/charge", "application/json")
      .withApiKey(apiKey, "X-Body-Hash", HEADER)
      .withApiKey(apiKey, "X-Consumer-Key", HEADER)
      .withApiKey(apiKey, "X-HMAC", HEADER)
      .withApiKey(apiKey, "X-HMAC-Timestamp", HEADER)
      .withApiKey(apiKey, "X-HMAC-Version", HEADER)
      .withApiKey(apiKey, "X-Session-Uuid", HEADER)
      .withBody(chargeableItems)
      .withPathParam("id", id)
      .withSuccessResponse[FolioResponse](200)
      .withErrorResponse[Errors](400)
      .withErrorResponse[Errors](401)
        /**
   * Mobile checkout. Works with PMS enabled venues only
   * 
   * Expected answers:
   *   code 200 : MobileCheckoutResponse (Mobile checkout Data)
   *   code 400 : Errors (Bad Request)
   *   code 401 : Errors (Unauthorized)
   * 
   * Available security schemes:
   *   bodyHash (apiKey)
   *   consumerKey (apiKey)
   *   hmac (apiKey)
   *   hmacTimestamp (apiKey)
   *   hmacVersion (apiKey)
   *   sessionUuid (apiKey)
   * 
   * @param id ID of reservation to sync transaction with
   */
  def guestReservationsIdMobileCheckoutPost(id: Long)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[MobileCheckoutResponse] =
    ApiRequest[MobileCheckoutResponse](ApiMethods.POST, "https://virtserver.swaggerhub.com/SmartBear-CC/Natalie_TestAutoMock/1.0.0", "/guest/reservations/{id}/mobile_checkout", "application/json")
      .withApiKey(apiKey, "X-Body-Hash", HEADER)
      .withApiKey(apiKey, "X-Consumer-Key", HEADER)
      .withApiKey(apiKey, "X-HMAC", HEADER)
      .withApiKey(apiKey, "X-HMAC-Timestamp", HEADER)
      .withApiKey(apiKey, "X-HMAC-Version", HEADER)
      .withApiKey(apiKey, "X-Session-Uuid", HEADER)
      .withPathParam("id", id)
      .withSuccessResponse[MobileCheckoutResponse](200)
      .withErrorResponse[Errors](400)
      .withErrorResponse[Errors](401)
        /**
   * Sync transacation with PMS. Works with PMS enabled venues only
   * 
   * Expected answers:
   *   code 200 : InlineResponse20035 (Transaction Data)
   *   code 400 : Errors (Bad Request)
   *   code 401 : Errors (Unauthorized)
   * 
   * Available security schemes:
   *   bodyHash (apiKey)
   *   consumerKey (apiKey)
   *   hmac (apiKey)
   *   hmacTimestamp (apiKey)
   *   hmacVersion (apiKey)
   *   sessionUuid (apiKey)
   * 
   * @param id ID of reservation to sync transaction with
   * @param transaction transaction
   */
  def guestReservationsIdTransactionsPost(id: Long, transaction: TransactionRequest)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[InlineResponse20035] =
    ApiRequest[InlineResponse20035](ApiMethods.POST, "https://virtserver.swaggerhub.com/SmartBear-CC/Natalie_TestAutoMock/1.0.0", "/guest/reservations/{id}/transactions", "application/json")
      .withApiKey(apiKey, "X-Body-Hash", HEADER)
      .withApiKey(apiKey, "X-Consumer-Key", HEADER)
      .withApiKey(apiKey, "X-HMAC", HEADER)
      .withApiKey(apiKey, "X-HMAC-Timestamp", HEADER)
      .withApiKey(apiKey, "X-HMAC-Version", HEADER)
      .withApiKey(apiKey, "X-Session-Uuid", HEADER)
      .withBody(transaction)
      .withPathParam("id", id)
      .withSuccessResponse[InlineResponse20035](200)
      .withErrorResponse[Errors](400)
      .withErrorResponse[Errors](401)
      

}

